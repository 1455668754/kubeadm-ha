kind: Pod
apiVersion: v1
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: lb-keepalived
  name: lb-keepalived
  namespace: kube-system
spec:
  hostNetwork: true
  priorityClassName: system-cluster-critical
  containers:
  - name: lb-keepalived
    # image: osixia/keepalived:2.0.15
    image: {{ kube_keepalived_image }}
    env:
    - name: KEEPALIVED_VIRTUAL_IPS
      value: {{ KUBE_APISERVER_IP | trim }}
    - name: KEEPALIVED_INTERFACE
      value: {{ KEEPALIVED_INTERFACE }}
    - name: KEEPALIVED_UNICAST_PEERS
      value: "#PYTHON2BASH:[{{ KEEPALIVED_UNICAST_PEERS }}]"
    - name: keepalived_password
      value: {{ keepalived_password }}
    - name: KEEPALIVED_PRIORITY
      value: "{{ KEEPALIVED_PRIORITY }}"
    - name: keepalived_router_id
      value: "{{ keepalived_router_id }}"
    {% if lb_kube_apiserver_healthcheck_port is defined -%}
    # 检测当前节点 lb 是否存活，若不存活则重启
    livenessProbe:
      httpGet:
        path: /healthz
        port: {{ lb_kube_apiserver_healthcheck_port }}
    readinessProbe:
      httpGet:
        path: /healthz
        port: {{ lb_kube_apiserver_healthcheck_port }}
    {% endif -%}
    # # 检测当前节点 lb 是否存活，若不存活则重启以让出 vip
    # livenessProbe:
    #   exec:
    #     command:
    #     - /bin/sh
    #     - -ec
    #     - nc -z -w 3 {{ CURRENT_HOST_IP }} {{ lb_kube_apiserver_healthcheck_port }}
    #   failureThreshold: 8
    #   initialDelaySeconds: 20
    #   timeoutSeconds: 15
    resources: {}
    securityContext:
      privileged: true
      capabilities:
        add:
        - NET_ADMIN