- name: 创建 kubelet 相关目录
  file: 
    name: "{{ item }}"
    state: directory
  with_items:
  - "{{ kubelet_root_dir }}"
  - /etc/systemd/system/kubelet.service.d
  - /usr/lib/systemd/system/kubelet.service.d

- include_tasks: nginx.yml
  when: lb_mode == "nginx"

- include_tasks: haproxy.yml
  when: lb_mode == "haproxy"

- name: 读取 kubelet.conf 文件 stat 信息
  stat: 
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf_stat

- block:
  - name: 获取 Docker Cgroup Driver 值
    shell: docker info --format '{{ '{{' }} json .CgroupDriver {{ '}}' }}' | cut -d'"' -f2
    register: docker_cgroup_driver

  - name: 设置变量 DOCKER_CGROUP_DRIVER
    set_fact: DOCKER_CGROUP_DRIVER="{{ docker_cgroup_driver.stdout }}"

  - name: 生成临时 kubelet unit 文件
    template: 
      src: 20-kubelet-override.conf.j2
      dest: "{{ item }}/20-kubelet-override.conf"
      owner: root
      mode: 0644
    with_items:
    - /etc/systemd/system/kubelet.service.d

  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes

  - name: 临时启动 kubelet 以引导 lb 运行
    service:
      name: kubelet
      state: restarted
      enabled: yes
  when: not kubelet_conf_stat.stat.exists

- name: 以轮询的方式等待 nginx 运行完成
  shell: nc -z -w 3 127.0.0.1 {{ lb_kube_apiserver_port }}
  register: nginx_status
  until: nginx_status.rc == 0
  retries: 12
  delay: 5
  when: lb_mode == "nginx"

- block:
  - name: 以轮询的方式等待 haproxy 运行完成
    shell: nc -z -w 3 127.0.0.1 {{ lb_kube_apiserver_port }}
    register: haproxy_status
    until: haproxy_status.rc == 0
    retries: 12
    delay: 5

  - name: 以轮询的方式等待 keepalived 运行完成
    shell: nc -z -w 3 {{ KUBE_APISERVER_IP | trim }} {{ lb_kube_apiserver_port }}
    register: keepalived_status
    until: keepalived_status.rc == 0
    retries: 12
    delay: 5
  when: lb_mode == "haproxy"

- block:
  - name: 移除临时 kubelet unit 文件
    file: 
      name: "{{ item }}"
      state: absent
    with_items:
    - /etc/systemd/system/kubelet.service.d/20-kubelet-override.conf

  - name: 重新加载 daemon
    systemd:
      daemon_reload: yes

  - name: 停止临时启动 kubelet
    service:
      name: kubelet
      state: stopped
      enabled: yes
  when: 
  - inventory_hostname in (groups['kube-master'] + groups['kube-worker'] + groups['new-master'] + groups['new-worker']) 
  - not kubelet_conf_stat.stat.exists