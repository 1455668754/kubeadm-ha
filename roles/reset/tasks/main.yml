- name: 读取 docker sock 文件 stat 信息
  stat: 
    path: /var/run/docker.sock
  register: docker_sock_stat

- name: 设置 container_manager_detected 变量
  set_fact:
    container_manager_detected: >-
      {%- if docker_sock_stat.stat.exists -%}
      docker
      {%- else -%}
      containerd
      {%- endif -%}

- name: 使用 kubeadm 重置节点
  command: kubeadm reset -f
  ignore_errors: true

- name: 停止 kubelet 服务
  service:
    name: kubelet
    state: stopped
    enabled: no
  ignore_errors: true

- block:
  - name: 停止运行的容器
    shell: "docker stop $(docker ps -aq)"
    register: remove_all_docker_containers
    retries: 5
    until: remove_all_docker_containers.rc == 0
    delay: 5
  
  - name: 清理 docker 相关数据
    shell: "docker system prune -a -f --volumes"
    register: remove_all_docker_data
    retries: 5
    until: remove_all_docker_data.rc == 0
    delay: 5

  - name: 停止 docker 服务
    service:
      name: docker
      state: stopped
      enabled: no
    ignore_errors: true
  when: container_manager_detected == "docker"

- block:
  - name:  停止运行的容器
    shell: "crictl ps -aq | xargs -r crictl -t 60s stop"
    register: remove_all_cri_containers
    retries: 5
    until: remove_all_cri_containers.rc == 0
    delay: 5
  
  - name: 删除所有容器
    shell: "crictl ps -aq | xargs -r crictl -t 60s rm"
    register: remove_all_cri_containers
    retries: 5
    until: remove_all_cri_containers.rc == 0
    delay: 5

  - name: 停止所有 cri pods
    shell: "crictl pods -q | xargs -r crictl -t 60s stopp"
    register: remove_all_cri_containers
    retries: 5
    until: remove_all_cri_containers.rc == 0
    delay: 5
  
  - name: 移除所有 cri pods
    shell: "crictl pods -q | xargs -r crictl -t 60s rmp"
    register: remove_all_cri_containers
    retries: 5
    until: remove_all_cri_containers.rc == 0
    delay: 5

  - name: 清除所有镜像
    shell: "crictl images -q | xargs crictl -t 60s rmi"
    register: remove_all_cri_containers
    retries: 5
    until: remove_all_cri_containers.rc == 0
    delay: 5

  - name: 停止 containerd 服务
    service:
      name: containerd
      state: stopped
      enabled: no
    ignore_errors: true
  when: container_manager_detected == "containerd"

- include_tasks: centos.yml
  when: ansible_distribution in [ 'CentOS','OracleLinux','RedHat' ]

- include_tasks: debian.yml
  when: ansible_distribution in [ 'Ubuntu','Debian' ]

- block:
  - name: 卸载 docker 相关文件或目录
    mount: 
      path: "{{ item }}"
      state: unmounted
    with_items:
    - /var/run/docker
    - /var/lib/docker/overlay
    - /var/run/docker/netns/default
  
  - name: 删除 docker 相关目录
    file: 
      name: "{{ item }}"
      state: absent
    with_items:
    - "{{ docker_storage_dir }}"
    - /etc/docker
    - /var/lib/docker
    - /var/run/docker
    - /usr/share/bash-completion/completions/docker
  when: container_manager_detected == "docker"

- name: 卸载 kubelet 相关目录
  mount: 
    path: "{{ item }}"
    state: unmounted
  with_items:
  - /var/lib/kubelet 
  - /var/run/kubelet 

- name: 删除 kubelet 相关文件或目录
  file: 
    name: "{{ item }}"
    state: absent
  with_items:
  - "{{ kubelet_root_dir }}"
  - "{{ ansible_env.HOME }}/.kube"
  - /etc/kubernetes
  - /var/lib/kubelet
  - /var/run/kubelet
  - /usr/share/bash-completion/completions/kubectl
  - /etc/systemd/system/kubelet.service.d

- name: 移除其他相关文件或目录
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ containerd_storage_dir }}"
  - /etc/containerd/config.toml
  - /etc/crictl.yaml
  - /etc/systemd/system/containerd.service.d
  - /etc/systemd/system/docker.service.d
  - /var/lib/etcd
  - /etc/cni/net.d
  - /etc/sysctl.d/95-k8s-sysctl.conf
  - /etc/modules-load.d/10-k8s-modules.conf
  - /run/flannel
  - /etc/calico
  - /var/run/calico
  - /var/lib/calico
  - /var/log/calico

- name: 删除 ulimits 相关配置
  file: 
    name: "{{ item }} "
    state: absent
  with_items:
  - /etc/systemd/system.conf.d/30-k8s-ulimits.conf

- name: 清理 iptables
  shell: "{{ item }} || true"
  with_items:
  - iptables -F
  - iptables -X
  - iptables -F -t nat
  - iptables -X -t nat
  - iptables -F -t filter
  - iptables -X -t filter
  - iptables -F -t mangle
  - iptables -X -t mangle

- name: 刷新 iptables
  iptables:
    table: "{{ item }}"
    flush: yes
  with_items:
    - filter
    - nat
    - mangle

- name: 清理 ipvsadm
  shell: "{{ item }} || true"
  with_items:
  - ipvsadm --clear

- name: 清除虚拟网卡
  shell: "{{ item }} || true"
  with_items:
  - ip link del docker0
  - ip link del tunl0
  - ip link del flannel.1
  - ip link del cni0
  - ip link del mynet0
  - ip link del kube-bridge
  - ip link del dummy0
  - ip link del kube-ipvs0
  - ip link del cilium_net
  - ip link del cilium_vxlan
  - ip link del ovn0
  - ip link del ovs-system

- name: 重新加载 daemon
  systemd:
    daemon_reload: yes

- name: 移除添加的 hosts 信息
  blockinfile:
    path: "/etc/hosts"
    state: absent
    follow: yes
    marker: "# Ansible inventory hosts {mark}"

- name: 重启网络
  systemd:
    name: >-
      {% if ansible_os_family == "RedHat" -%}
      {%- if ansible_distribution_major_version|int == 8 -%}
      NetworkManager
      {%- else -%}
      network
      {%- endif -%}
      {%- elif ansible_distribution == "Ubuntu" and ansible_distribution_release == "bionic" -%}
      systemd-networkd
      {%- elif ansible_os_family == "Debian" -%}
      networking
      {%- endif %}
    state: restarted